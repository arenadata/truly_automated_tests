{
  "uid" : "e01adebbb4e25fbd",
  "name" : "test_methods[cluster_GET_positive]",
  "fullName" : "api.test_methods#test_methods",
  "historyId" : "6e48caa355b540f67eeaf3de6a92068e",
  "time" : {
    "start" : 1618389387070,
    "stop" : 1618389387070,
    "duration" : 0
  },
  "description" : "\n    Test allowed methods\n    Generate request and response pairs depending on allowed and not allowed methods\n    for all api endpoints\n    ",
  "descriptionHtml" : "<pre><code>Test allowed methods\nGenerate request and response pairs depending on allowed and not allowed methods\nfor all api endpoints\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Expecting status code 201 but got 422",
  "statusTrace" : "request = <SubRequest 'prepare_data' for <Function test_methods[cluster_GET_positive]>>\napp_fs = <tests.utils.api_objects.APPApi object at 0x7fe9f360ddf0>\n\n    @pytest.fixture(params=get_data_for_methods_check())\n    def prepare_data(request, app_fs):\n        \"\"\"\n        Generate request body here since it depends on actual APP instance\n        and can't be determined when generating\n        \"\"\"\n        test_data_list: List[TestData] = request.param\n        for test_data in test_data_list:\n>           request_data = DbFiller(app=app_fs).generate_valid_request_data(\n                endpoint=test_data.request.endpoint, method=test_data.request.method\n            )\n\ntests/api/test_methods.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_data/db_filler.py:54: in generate_valid_request_data\n    object_id=self._get_or_create_data_for_endpoint(endpoint=endpoint)[0][\"id\"],\ntests/test_data/db_filler.py:88: in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\ntests/utils/api_objects.py:72: in exec_request\n    status_code_should_be(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [422]>, status_code = <HTTPStatus.CREATED: 201>\n\n    @allure.step(\"Response status code should be equal {status_code}\")\n    def status_code_should_be(response: Response, status_code=HTTPStatus.OK):\n        \"\"\"Assert response status code\"\"\"\n>       assert (\n            response.status_code == status_code\n        ), f\"Expecting status code {status_code} but got {response.status_code}\"\nE       AssertionError: Expecting status code 201 but got 422\n\ntests/steps/asserts.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "cmd_opts",
    "time" : {
      "start" : 1618389387074,
      "stop" : 1618389387074,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "app_fs",
    "time" : {
      "start" : 1618389390964,
      "stop" : 1618389392553,
      "duration" : 1589
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Run container: local/app:CvmizaDGct",
      "time" : {
        "start" : 1618389390978,
        "stop" : 1618389391508,
        "duration" : 530
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "prepare_data",
    "time" : {
      "start" : 1618389392553,
      "stop" : 1618389392653,
      "duration" : 100
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: Expecting status code 201 but got 422\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/api/test_methods.py\", line 22, in prepare_data\n    request_data = DbFiller(app=app_fs).generate_valid_request_data(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 54, in generate_valid_request_data\n    object_id=self._get_or_create_data_for_endpoint(endpoint=endpoint)[0][\"id\"],\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 88, in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
    "steps" : [ {
      "name" : "Generate valid request data",
      "time" : {
        "start" : 1618389392554,
        "stop" : 1618389392653,
        "duration" : 99
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expecting status code 201 but got 422\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 54, in generate_valid_request_data\n    object_id=self._get_or_create_data_for_endpoint(endpoint=endpoint)[0][\"id\"],\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 88, in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
      "steps" : [ {
        "name" : "Send LIST /cluster/",
        "time" : {
          "start" : 1618389392554,
          "stop" : 1618389392603,
          "duration" : 49
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618389392603,
            "stop" : 1618389392603,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "151745ab5315edb2",
          "name" : "Full request log",
          "source" : "151745ab5315edb2.txt",
          "type" : "text/plain",
          "size" : 504
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send POST /cluster/",
        "time" : {
          "start" : 1618389392603,
          "stop" : 1618389392653,
          "duration" : 50
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Expecting status code 201 but got 422\n",
        "statusTrace" : "  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.CREATED: 201>",
          "time" : {
            "start" : 1618389392652,
            "stop" : 1618389392652,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "AssertionError: Expecting status code 201 but got 422\n",
          "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [422]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.CREATED: 201>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : true,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "bfafe9c3ef923747",
          "name" : "Full request log",
          "source" : "bfafe9c3ef923747.txt",
          "type" : "text/plain",
          "size" : 835
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "endpoint",
        "value" : "<Endpoints.Cluster: Endpoint(path='cluster', methods=[<Methods.GET: Method(function=<function get at 0x7fe9f396da60>, url_template='/{name}/{id}/', default_success_code=<HTTPStatus.OK: 200>)>, <Methods.LIST: Method(function=<function get at 0x7fe9f396da60>, url_template='/{name}/', default_success_code=<HTTPStatus.OK: 200>)>, <Methods.POST: Method(function=<function post at 0x7fe9f396dc10>, url_template='/{name}/', default_success_code=<HTTPStatus.CREATED: 201>)>], data_class=<class 'tests.utils.data_classes.ClusterFields'>)>"
      }, {
        "name" : "method",
        "value" : "<Methods.GET: Method(function=<function get at 0x7fe9f396da60>, url_template='/{name}/{id}/', default_success_code=<HTTPStatus.OK: 200>)>"
      } ],
      "stepsCount" : 4,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "image",
    "time" : {
      "start" : 1618389387074,
      "stop" : 1618389390963,
      "duration" : 3889
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Run container: app:refs_pull_6_merge",
      "time" : {
        "start" : 1618389387119,
        "stop" : 1618389387624,
        "duration" : 505
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "app_fs::fin",
    "time" : {
      "start" : 1618389392740,
      "stop" : 1618389393078,
      "duration" : 338
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Gather /var/www/html/storage/app/ from APP container: 63af30d252ed17b892201d77b366fe625c2a815e5ad250c493e0cd7b54db0363",
      "time" : {
        "start" : 1618389392740,
        "stop" : 1618389392820,
        "duration" : 80
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "fb002b9dbcecacaa",
        "name" : "test_methods[cluster_GET_positive]_1618389392.7404835.tgz",
        "source" : "fb002b9dbcecacaa.tgz",
        "type" : "application/gzip",
        "size" : 1192
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "image::fin",
    "time" : {
      "start" : 1618389425588,
      "stop" : 1618389425599,
      "duration" : 11
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Allowed methods tests"
  }, {
    "name" : "parentSuite",
    "value" : "API"
  }, {
    "name" : "tag",
    "value" : "positive"
  }, {
    "name" : "host",
    "value" : "fv-az252-672"
  }, {
    "name" : "thread",
    "value" : "4923-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "api.test_methods"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "prepare_data",
    "value" : "[GET cluster and expect 200 status code. at 0x7fe9f36d1c70]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "positive" ]
  },
  "source" : "e01adebbb4e25fbd.json",
  "parameterValues" : [ "[GET cluster and expect 200 status code. at 0x7fe9f36d1c70]" ]
}