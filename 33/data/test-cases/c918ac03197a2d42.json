{
  "uid" : "c918ac03197a2d42",
  "name" : "test_post_body_negative[backup_POST_negative_Invalid field types and values]",
  "fullName" : "api.test_request_body.test_post#test_post_body_negative",
  "historyId" : "36ae51f5ac1ce92b89463d137a1087d1",
  "time" : {
    "start" : 1618397087428,
    "stop" : 1618397087428,
    "duration" : 0
  },
  "description" : "\n    Negative cases of request body testing\n    Includes sets of invalid field values - out of boundary values,\n    nullable and required if not possible, fields with incorrect types etc.\n    ",
  "descriptionHtml" : "<pre><code>Negative cases of request body testing\nIncludes sets of invalid field values - out of boundary values,\nnullable and required if not possible, fields with incorrect types etc.\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Expecting status code 201 but got 500",
  "statusTrace" : "request = <SubRequest 'prepare_post_body_data' for <Function test_post_body_negative[backup_POST_negative_Invalid field types and values]>>\napp_fs = <tests.utils.api_objects.APPApi object at 0x7f60f12654c0>\n\n    @pytest.fixture()\n    def prepare_post_body_data(request, app_fs: APPApi):\n        \"\"\"\n        Fixture for preparing test data for POST request, depending on generated test datasets\n        \"\"\"\n        test_data_list: List[TestDataWithPreparedBody] = request.param\n>       valid_request_data = DbFiller(app=app_fs).generate_valid_request_data(\n            endpoint=test_data_list[0].test_data.request.endpoint, method=Methods.POST\n        )\n\ntests/api/test_request_body/test_post.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_data/db_filler.py:39: in generate_valid_request_data\n    \"data\": self._get_or_create_data_for_endpoint(\ntests/test_data/db_filler.py:80: in _get_or_create_data_for_endpoint\n    data = self._prepare_data_for_object_creation(endpoint=endpoint, force=force)\ntests/test_data/db_filler.py:108: in _prepare_data_for_object_creation\n    fk_data = self._get_or_create_data_for_endpoint(\ntests/test_data/db_filler.py:88: in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\ntests/utils/api_objects.py:72: in exec_request\n    status_code_should_be(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, status_code = <HTTPStatus.CREATED: 201>\n\n    @allure.step(\"Response status code should be equal {status_code}\")\n    def status_code_should_be(response: Response, status_code=HTTPStatus.OK):\n        \"\"\"Assert response status code\"\"\"\n>       assert (\n            response.status_code == status_code\n        ), f\"Expecting status code {status_code} but got {response.status_code}\"\nE       AssertionError: Expecting status code 201 but got 500\n\ntests/steps/asserts.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "prepare_post_body_data",
    "time" : {
      "start" : 1618397088842,
      "stop" : 1618397089265,
      "duration" : 423
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: Expecting status code 201 but got 500\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/api/test_request_body/test_post.py\", line 32, in prepare_post_body_data\n    valid_request_data = DbFiller(app=app_fs).generate_valid_request_data(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 39, in generate_valid_request_data\n    \"data\": self._get_or_create_data_for_endpoint(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 80, in _get_or_create_data_for_endpoint\n    data = self._prepare_data_for_object_creation(endpoint=endpoint, force=force)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 108, in _prepare_data_for_object_creation\n    fk_data = self._get_or_create_data_for_endpoint(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 88, in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
    "steps" : [ {
      "name" : "Generate valid request data",
      "time" : {
        "start" : 1618397088842,
        "stop" : 1618397089265,
        "duration" : 423
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expecting status code 201 but got 500\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 39, in generate_valid_request_data\n    \"data\": self._get_or_create_data_for_endpoint(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 80, in _get_or_create_data_for_endpoint\n    data = self._prepare_data_for_object_creation(endpoint=endpoint, force=force)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 108, in _prepare_data_for_object_creation\n    fk_data = self._get_or_create_data_for_endpoint(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/test_data/db_filler.py\", line 88, in _get_or_create_data_for_endpoint\n    response = self.app.exec_request(\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
      "steps" : [ {
        "name" : "Send LIST /cluster/",
        "time" : {
          "start" : 1618397088842,
          "stop" : 1618397088887,
          "duration" : 45
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397088887,
            "stop" : 1618397088887,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "8d7a2b702e1b7275",
          "name" : "Full request log",
          "source" : "8d7a2b702e1b7275.txt",
          "type" : "text/plain",
          "size" : 504
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send LIST /cluster-type/",
        "time" : {
          "start" : 1618397088887,
          "stop" : 1618397088933,
          "duration" : 46
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397088933,
            "stop" : 1618397088933,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "ef4895efff730491",
          "name" : "Full request log",
          "source" : "ef4895efff730491.txt",
          "type" : "text/plain",
          "size" : 563
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send LIST /cluster-type/",
        "time" : {
          "start" : 1618397088933,
          "stop" : 1618397088994,
          "duration" : 61
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397088994,
            "stop" : 1618397088994,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "15b6a874eb763fc7",
          "name" : "Full request log",
          "source" : "15b6a874eb763fc7.txt",
          "type" : "text/plain",
          "size" : 563
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send POST /cluster/",
        "time" : {
          "start" : 1618397088994,
          "stop" : 1618397089046,
          "duration" : 52
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.CREATED: 201>",
          "time" : {
            "start" : 1618397089046,
            "stop" : 1618397089046,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [201]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.CREATED: 201>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "fa73edfc3f6de7d9",
          "name" : "Full request log",
          "source" : "fa73edfc3f6de7d9.txt",
          "type" : "text/plain",
          "size" : 1060
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send GET /cluster/1/",
        "time" : {
          "start" : 1618397089046,
          "stop" : 1618397089086,
          "duration" : 40
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397089086,
            "stop" : 1618397089086,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "78d4b2c66395e1f",
          "name" : "Full request log",
          "source" : "78d4b2c66395e1f.txt",
          "type" : "text/plain",
          "size" : 784
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send LIST /file-system/",
        "time" : {
          "start" : 1618397089086,
          "stop" : 1618397089132,
          "duration" : 46
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397089132,
            "stop" : 1618397089132,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "95ff6f8b9509b726",
          "name" : "Full request log",
          "source" : "95ff6f8b9509b726.txt",
          "type" : "text/plain",
          "size" : 508
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send LIST /fs-type/",
        "time" : {
          "start" : 1618397089132,
          "stop" : 1618397089171,
          "duration" : 39
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397089171,
            "stop" : 1618397089171,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "4580ffc12d739299",
          "name" : "Full request log",
          "source" : "4580ffc12d739299.txt",
          "type" : "text/plain",
          "size" : 558
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send LIST /fs-type/",
        "time" : {
          "start" : 1618397089171,
          "stop" : 1618397089221,
          "duration" : 50
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.OK: 200>",
          "time" : {
            "start" : 1618397089221,
            "stop" : 1618397089221,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [200]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.OK: 200>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "a18959748b52e6c8",
          "name" : "Full request log",
          "source" : "a18959748b52e6c8.txt",
          "type" : "text/plain",
          "size" : 558
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send POST /file-system/",
        "time" : {
          "start" : 1618397089221,
          "stop" : 1618397089265,
          "duration" : 44
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Expecting status code 201 but got 500\n",
        "statusTrace" : "  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/utils/api_objects.py\", line 72, in exec_request\n    status_code_should_be(\n  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
        "steps" : [ {
          "name" : "Response status code should be equal <HTTPStatus.CREATED: 201>",
          "time" : {
            "start" : 1618397089264,
            "stop" : 1618397089264,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "AssertionError: Expecting status code 201 but got 500\n",
          "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.4/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/truly_automated_tests/truly_automated_tests/tests/steps/asserts.py\", line 16, in status_code_should_be\n    assert (\n",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "response",
            "value" : "<Response [500]>"
          }, {
            "name" : "status_code",
            "value" : "<HTTPStatus.CREATED: 201>"
          } ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : true,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "1a6f8e25cda24ffc",
          "name" : "Full request log",
          "source" : "1a6f8e25cda24ffc.txt",
          "type" : "text/html",
          "size" : 1582
        } ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "endpoint",
        "value" : "<Endpoints.Backup: Endpoint(path='backup', methods=[<Methods.GET: Method(function=<function get at 0x7f60f16e3a60>, url_template='/{name}/{id}/', default_success_code=<HTTPStatus.OK: 200>)>, <Methods.LIST: Method(function=<function get at 0x7f60f16e3a60>, url_template='/{name}/', default_success_code=<HTTPStatus.OK: 200>)>, <Methods.POST: Method(function=<function post at 0x7f60f16e3c10>, url_template='/{name}/', default_success_code=<HTTPStatus.CREATED: 201>)>], data_class=<class 'tests.utils.data_classes.BackupFields'>)>"
      }, {
        "name" : "method",
        "value" : "<Methods.POST: Method(function=<function post at 0x7f60f16e3c10>, url_template='/{name}/', default_success_code=<HTTPStatus.CREATED: 201>)>"
      } ],
      "stepsCount" : 18,
      "attachmentsCount" : 9,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 19,
    "attachmentsCount" : 9,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "app_fs",
    "time" : {
      "start" : 1618397087429,
      "stop" : 1618397088841,
      "duration" : 1412
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Run container: local/app:AlNetZBxPD",
      "time" : {
        "start" : 1618397087444,
        "stop" : 1618397087790,
        "duration" : 346
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "image",
    "time" : {
      "start" : 1618397035033,
      "stop" : 1618397038619,
      "duration" : 3586
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Run container: app:refs_pull_6_merge",
      "time" : {
        "start" : 1618397035067,
        "stop" : 1618397035582,
        "duration" : 515
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "cmd_opts",
    "time" : {
      "start" : 1618397035033,
      "stop" : 1618397035033,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "app_fs::fin",
    "time" : {
      "start" : 1618397089283,
      "stop" : 1618397089523,
      "duration" : 240
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Gather /var/www/html/storage/app/ from APP container: 77b134023e996ed1a44eaa29373ffbb33516b65b0a260914fd239f28e525f727",
      "time" : {
        "start" : 1618397089283,
        "stop" : 1618397089345,
        "duration" : 62
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "300917084617eb06",
        "name" : "test_post_body_negative[backup_POST_negative_Invalid field types and values]_1618397089.2833161.tgz",
        "source" : "300917084617eb06.tgz",
        "type" : "application/gzip",
        "size" : 1409
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "image::fin",
    "time" : {
      "start" : 1618397091630,
      "stop" : 1618397091642,
      "duration" : 12
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Body tests"
  }, {
    "name" : "subSuite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "API"
  }, {
    "name" : "tag",
    "value" : "negative"
  }, {
    "name" : "host",
    "value" : "fv-az139-696"
  }, {
    "name" : "thread",
    "value" : "4846-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "api.test_request_body.test_post"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "prepare_post_body_data",
    "value" : "[TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141aca0, test_body={'filesystem_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False)]), drop_key=False), 'cluster_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False)]), drop_key=False), 'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141adc0, test_body={'filesystem_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False)]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141aeb0, test_body={'cluster_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False)]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141afa0, test_body={'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d0a0, test_body={'filesystem_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False), 'cluster_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False), 'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d1c0, test_body={'filesystem_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d2b0, test_body={'cluster_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d3a0, test_body={'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)})]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "cd7e2443819d9c8",
        "reportUrl" : "https://arenadata.github.io/truly_automated_tests/31//#testresult/cd7e2443819d9c8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expecting status code 201 but got 422",
        "time" : {
          "start" : 1618389424738,
          "stop" : 1618389424738,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "negative" ]
  },
  "source" : "c918ac03197a2d42.json",
  "parameterValues" : [ "[TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141aca0, test_body={'filesystem_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False)]), drop_key=False), 'cluster_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False)]), drop_key=False), 'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141adc0, test_body={'filesystem_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False)]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141aeb0, test_body={'cluster_id': PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[..., PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False)]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141afa0, test_body={'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d0a0, test_body={'filesystem_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False), 'cluster_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False), 'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d1c0, test_body={'filesystem_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected filesystem id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d2b0, test_body={'cluster_id': PreparedFieldValue(value=2147483648, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=ForeignKey(_sp_vals_positive=None, _sp_vals_negative=[PreparedFieldValue(value=100, generated_value=False, error_messages=['The selected cluster id is invalid.'], f_type=..., drop_key=False), ...]), drop_key=False)}), TestDataWithPreparedBody(test_data=POST backup and expect 422 status code. at 0x7f60f141d3a0, test_body={'name': PreparedFieldValue(value='JRsyXeQJVOATFXVLbLDcxKdvPRujYjHQYpuCAgxsqKmGAtlDaolDBwIroURAgpezgxgDzuvQpKMNSzGzuKBVwcqNuJXyBaWZQRztiFvWfrUDFMJonaunJnmTMhpqTXDezElAJbHrDsvmJagTTNNSePNZQJZxvoKebUJbUdVxSaXaQTCduRBigmAQgKBEPyRnVRdUgJBvbZEhXncvCYrlWFeTDrmUgoNtHsclUhiemQZhhoNXIajNxCeJSJDaXgRB', generated_value=False, error_messages=['The name may not be greater than 255 characters.'], f_type=String(_sp_vals_positive=['s', '!@#$%^&*\\\\/{}[]', 'wLianMYvydUWuNJoqIMtEigdqvHxAvOLyAnyydqLcUNRroratyIYXoBsspNKTRHrktyWfLNTRYWGuTcglwErDIxRHNQiUkqNBNYUtrJKdSfvIJceVySJqQUoSbjonkYyPnuVaajqoKKOxpzEeetQDczMvCuWAULnSOQSiNtqcvngNUuDepbRqIPzhUZyRPBOFBADeBUHNbAaRjgXsHDLTOYVFxlQiitwKABCHOJgjONluFdPnUzHMuVXEpiugvs'], _sp_vals_negative=[...]), drop_key=False)})]" ]
}